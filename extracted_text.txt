programming assignment 1 basic data structures revision may 4 2018 introduction welcome to your first programming assignment in the data structures fundamentals course of the algo rithms and data structures micromasters program in this programming assignment you will be practicing implementing basic data structures and using them to solve algorithmic problems in some of the problems you just need to implement and use a data structurefromthelectureswhileintheothersyouwillalsoneedtoinventanalgorithmtosolvetheproblem using some of the basic data structures inthisprogrammingassignmentthegraderwillshowyoutheinputandoutputdataifyoursolutionfails onanyoftheteststhisisdonetohelpyoutogetusedtothealgorithmicproblemsingeneralandgetsome experience debugging your programs while knowing exactly on which tests they fail however note that for very big inputs the grader cannot show them fully so it will only show the beginning of the input for you to make sense of its size and then it will be clipped you will need to generate big inputs for yourself for all the following programming assignments the grader will show the input data only in case your solution fails on one of the first few tests please review the questions and in the faq section for a more detailed explanation of this behavior of the grader learning outcomes upon completing this programming assignment you will be able to 1 apply the basic data structures youâ€™ve just studied to solve the given algorithmic problems 2 given a piece of code in an unknown programming language check whether the brackets are used correctly in the code or not 3 implement a tree read it from the input and compute its height 4 simulate processing of computer network packets 5 extend the standard stack interface with a new method passing criteria 2 out of 4 passingthisprogrammingassignmentrequirespassingatleast2outof4codeproblemsfromthisassignment in turn passing a code problem requires implementing a solution that passes all the tests for this problem in the grader and does so under the time and memory limits specified in the problem statement contents 1 problem check brackets in the code 3 1